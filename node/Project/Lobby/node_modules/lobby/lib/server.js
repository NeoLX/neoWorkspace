'use strict'

var fs = require('fs');
var events = require('events');
var pather = require("path");
var util = require('util');
var express = require('express');
var appbase = require('./appBase.js');
var webapp = require('./webApp.js');

var obj = {};

obj.createInstance = function(){
    
    var base = appbase();

    var Server = base.extend(
        {
            _app:null,
            _path:null,
            _webApps:{},
            _sysConfig:null,

            init:
                function(config){
                        
                    if(!config){
                        console.log("SERVER CONFIG IS ENPTY");

                        return ;
                    }else{

                        this.setServerConfig(config);
                    }


                    this._super(config.name);
                    //初始化事件
                    // this.on(Server.Handles.onInited, initedHandle);
                    // this.on(Server.Handles.onStatusChange, statusChangeHandle);
                    // this.on(Server.Handles.onException, exceptionHandle);
                    
                    this._app = express();
                    this._path = config.path;

                    //初始化事件
                    this.registerEvent(Server.Status.Inited, Server.Handles.onInited, this.initedHandle);
            
                    // var data;

                    // try {

                    //     data = fs.readFileSync(path + "/server.json", 'utf8');

                    // } catch (e) {

                    //     this.log("CANNOT_READ_SERVER_CONFIG");
                    //     this.log(e);
                    //     try {

                    //         data = fs.readFileSync(PATH.normalize(__dirname + "/../config/server.json"), 'utf8');
                    //         this.log("USING_SERVER_DEFAULT_CONFIG");
                    //     } catch (e2) {

                    //         this.log("CANNOT_READ_SERVER_DEFAULT_CONFIG");
                    //         this.log(e2);
                    //         return;
                    //     }
                    // }
                    // if (data) {

                    //     this.setServerConfig(JSON.parse(data));
                    //     this.log("Server Config Ready");
                    //     // self.setStatus(WebApp.Status.WebConfigReady);

                    // } else {
                    //     this.log("CANNOT_READ_SERVER_CONFIG");
                    //     return;
                    // }
                    
                    this.setStatus(Server.Status.Inited);                
                },

            start:
                function(){
                    this._app.listen(this._serverConfig.port);
                },

            initedHandle:
                function(){
                    //加载服务器配置
                    this.log("Inited");
                    this.readDir();
                    
                    //服务器初始化完成
                    this.setStatus(Server.Status.Ready);
                },

            readDir:
                function(){
                    var files = fs.readdirSync(this._path);

                    for(var i in files){
                        var subPath = this._path + "/" + files[i];
                        this.log("Reading file:" + subPath);
                        var stats = fs.statSync(subPath);

                        if(stats.isDirectory()){
                            var web = webapp();
                            this._webApps[files[i]] = new web(this._app, subPath, files[i]);
                        }
                    }
                },

            setServerConfig:
                function(data){
                    this._serverConfig = data;
                }
        }
    ); 

    Server.Handles = {};
    Server.Handles.onStatusChange = "ON_STATUS_CHANGE";
    Server.Handles.onInited = "ON_INITED";
    Server.Handles.onException = "ON_EXCEPTION";

    Server.Status = {};
    Server.Status.Inited = "SERVER_CONFIG_INITED";
    Server.Status.Ready = "SERVER_READY";

    return Server;
};
module.exports = obj;