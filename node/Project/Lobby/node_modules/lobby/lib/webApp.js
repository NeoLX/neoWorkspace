'use strict'

var fs = require('fs');
var PATH = require("path");
var util = require('util');
var express = require('express');
var appbase = require('./appBase.js');

var createInstance = function(){

    var base = appbase();

    var WebApp = base.extend(
        {
            _app:null,
            _path:null,
            _webConfig:null,
            _defConfig:null,
            _router:null,
            init:
                function (app, path, name) {
                    this._super(name);

                    this.log("WebApp initing");

                    var self = this;
                    this._app = app;
                    this._path = path;

                    //初始化事件
                    this.registerEvent(WebApp.Status.Inited, WebApp.Handles.onInited, this.initedHandle);
            
                    var data;

                    try {

                        data = fs.readFileSync(path + "/web.json", 'utf8');

                    } catch (e) {

                        this.log("CANNOT_READ_WEB_CONFIG");
                        this.log(e);
                        try {

                            data = fs.readFileSync(PATH.normalize(__dirname + "/../config/web.json"), 'utf8');
                            this.log("USING_WEB_DEFAULT_CONFIG");
                        } catch (e2) {

                            this.log("CANNOT_READ_WEB_DEFAULT_CONFIG");
                            this.log(e2);
                            return;
                        }
                    }
                    if (data) {

                        self.setWebConfig(JSON.parse(data));
                        this.log("WebConfig Ready");
                        // self.setStatus(WebApp.Status.WebConfigReady);

                    } else {
                        this.log("CANNOT_READ_WEB_CONFIG");
                        return;
                    }

                    this.setStatus(WebApp.Status.Inited);
                },
            
            initedHandle:
                function () {
                    this.log("Inited 2");
                    this._router = express.Router();
                    this._router.use(express.static(this._path));

                    this._app.use(this._webConfig.webapp.root, this._router);
                },
            
            //添加路由
            addRouter:
                function (root, path) {
                    var self = this;

                    return function (exists) {
                        if (exists) {
                            router.getInstance(root, path, self.setWebConfig());
                        }
                    }
                },

            setWebConfig:
                function (conf) {
                    this._webConfig = conf;
                },

            setDefConfig:
                function (conf) {
                    this._defConfig = conf;
                }
        }
    );

    WebApp.Handles = {};
    WebApp.Handles.onInited = "ON_WEB_CONFIG_INITED";

    WebApp.Status = {};
    WebApp.Status.Inited = "WEB_CONFIG_INITED";

    return WebApp;
};

module.exports = createInstance;