'use strict'

var events = require('events');
var pather = require("path");
var util = require('util');
var Class = require(pather.normalize(__dirname + '/../utils/objectTool.js'));

var createInstance = function(){

    var emitter = Class.extend(new events.EventEmitter());

    var AppBase = emitter.extend(
        {
            _status: 0,
            _handlers:null,
            _appName:null,
            // _eventEmitter:null,

            init: 
                function(name){

                    this._appName = name;

                    this._handlers = {};

                    // this._eventEmitter = new events.EventEmitter().bind(this);
                    // this._eventEmitter = this;

                    this.registerEvent(AppBase.Status.statusChanging, AppBase.Handles.onStatusChanging, this.statusChangeHandle);
                    // this.on(AppBase.Handles.onStatusChange, this.statusChangeHandle);
                },

            log:
                function(str){
                    console.log("[" + this._appName + "]" + str);
                },

            setStatus:
                function (status) {
            
                    this._status = status;
                    
                    this.log("Status Change:" + this._status);
                    this.doEvent(AppBase.Handles.onStatusChanging);
                },

            statusChangeHandle:
                function(){
                    this.log("base status change handle:status[" + this._status + "]");
                    
                    var handler = this._handlers[this._status];

                    if(handler){
                        this.doEvent(handler);
                    }
                    
                },

            registerEvent:
                function(status, event, handler){
                    this._handlers[status] = event;
                    // this._eventEmitter.on(event, handler);
                    this.on(event, handler);
                },

            doEvent:
                function(event){
                    // this._eventEmitter.emit(event);
                    this.emit(event);
                }
        }
    );

    // util.inherits(AppBase, events.EventEmitter);

    AppBase.Handles = {};
    AppBase.Handles.onStatusChanging = "ON_STATUS_CHANGING";
    AppBase.Handles.onInited = "ON_INITED";

    AppBase.Status = {};
    AppBase.Status.statusChanging = "STATUS_CHANGING";

    return AppBase;
};

module.exports = createInstance;